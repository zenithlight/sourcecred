// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphql/generateFlowTypes generateFlowTypes works on a representative schema 1`] = `
"// @flow

// Autogenerated file. Do not edit.

import deepFreeze from \\"deep-freeze\\";

export type Actor = Human | TalentedChimpanzee;

export type Color = \\"BLUE\\" | \\"GREEN\\" | \\"RED\\";

export const Color$Values: {|
  +BLUE: \\"BLUE\\",
  +GREEN: \\"GREEN\\",
  +RED: \\"RED\\",
|} = deepFreeze({ BLUE: \\"BLUE\\", GREEN: \\"GREEN\\", RED: \\"RED\\" });

export type DateTime = string;

export type Dollars = number;

export type EmptyEnum = empty;

export const EmptyEnum$Values: {||} = deepFreeze({});

export type EmptyUnfaithfulSet = {|
  +__typename: \\"EmptyUnfaithfulSet\\",
  +foo: null | empty,
  +id: string,
|};

export type EmptyUnion = empty;

export type Human = {|
  +__typename: \\"Human\\",
  +id: string,
  +name: null | String,
|};

export type PaintJob = {|
  +__typename: \\"PaintJob\\",
  +client: null | Human | TalentedChimpanzee,
  +coClients: $ReadOnlyArray<null | Human | TalentedChimpanzee>,
  +color: Color,
  +completed: null | DateTime,
  +cost: Dollars,
  +designer: null | Actor,
  +details: null | {|
    +description: null | String,
    +moreMetadata: mixed,
    +oldClient: null | Human | TalentedChimpanzee,
    +oldColor: Color,
    +oldPainter: null | Actor,
  |},
  +id: string,
  +metadata: mixed,
  +painters: $ReadOnlyArray<null | Actor>,
  +referrer: null | PaintJob,
  +relatedWork: $ReadOnlyArray<null | PaintJob>,
|};

export type String = string;

export type TalentedChimpanzee = {|
  +__typename: \\"TalentedChimpanzee\\",
  +id: string,
  +name: null | String,
|};
"
`;
